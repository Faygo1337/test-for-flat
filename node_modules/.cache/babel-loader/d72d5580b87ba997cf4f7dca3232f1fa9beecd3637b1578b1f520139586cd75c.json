{"ast":null,"code":"var _jsxFileName = \"/Users/faygo1337/Desktop/test-for-flat/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PostsList from './components/postList/PostList';\nimport PostDetails from './components/postDetails/PostDetails';\nimport Axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [postsRes, usersRes, commentsRes] = await Promise.all([Axios.get('https://jsonplaceholder.typicode.com/posts'), Axios.get('https://jsonplaceholder.typicode.com/users'), Axios.get('https://jsonplaceholder.typicode.com/comments')]);\n        setPosts(postsRes.data);\n        setUsers(usersRes.data);\n        setComments(commentsRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PostsList, {\n            posts: posts,\n            users: users,\n            isLoading: isLoading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/posts/:postId\",\n          element: /*#__PURE__*/_jsxDEV(PostDetails, {\n            posts: posts,\n            comments: comments,\n            users: users,\n            isLoading: isLoading,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8bWwGLOnFKlJO7nN+PBW0c63yLg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","PostsList","PostDetails","Axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","users","setUsers","comments","setComments","isLoading","setLoading","error","setError","fetchData","postsRes","usersRes","commentsRes","Promise","all","get","data","err","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/faygo1337/Desktop/test-for-flat/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PostsList from './components/postList/PostList';\nimport PostDetails from './components/postDetails/PostDetails';\nimport Axios from 'axios';\nimport { IPost, IUser, IComment } from './components/types/types';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<IPost[]>([]);\n  const [users, setUsers] = useState<IUser[]>([]);\n  const [comments, setComments] = useState<IComment[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [postsRes, usersRes, commentsRes] = await Promise.all([\n          Axios.get('https://jsonplaceholder.typicode.com/posts'),\n          Axios.get('https://jsonplaceholder.typicode.com/users'),\n          Axios.get('https://jsonplaceholder.typicode.com/comments')\n        ]);\n        setPosts(postsRes.data);\n        setUsers(usersRes.data);\n        setComments(commentsRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<PostsList posts={posts} users={users} isLoading={isLoading} error={error} />} />\n        <Route path=\"/posts/:postId\" element={<PostDetails posts={posts} comments={comments} users={users} isLoading={isLoading} error={error} />} />\n      </Routes>\n\n      </div>\n      \n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}